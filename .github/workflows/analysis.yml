name: "Go Combined Analysis"

on:
  workflow_call:
    secrets:
      manage_token:
        required: true
      lerian_studio_push_bot_app_id:
        required: true
      lerian_studio_push_bot_private_key:
        required: true
      lerian_ci_cd_user_gpg_key:
        required: true
      lerian_ci_cd_user_gpg_key_password:
        required: true
      lerian_ci_cd_user_name:
        required: true
      lerian_ci_cd_user_email:
        required: true
    inputs:
      go_version:
        description: 'Go version to use'
        type: string
        default: '1.23'
      golangci_lint_version:
        description: 'GolangCI-Lint version to use'
        type: string
        default: 'v2.0.2'

jobs:
  GoLangCI-Lint:
    name: Run GoLangCI-Lint
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Run GoLangCI Lint
        uses: LerianStudio/github-actions-golangci-lint@main
        with:
          lerian_studio_midaz_push_bot_app_id: ${{ secrets.lerian_studio_push_bot_app_id }}
          lerian_studio_midaz_push_bot_private_key: ${{ secrets.lerian_studio_push_bot_private_key }}
          lerian_ci_cd_user_gpg_key: ${{ secrets.lerian_ci_cd_user_gpg_key }}
          lerian_ci_cd_user_gpg_key_password: ${{ secrets.lerian_ci_cd_user_gpg_key_password }}
          lerian_ci_cd_user_name: ${{ secrets.lerian_ci_cd_user_name }}
          lerian_ci_cd_user_email: ${{ secrets.lerian_ci_cd_user_email }}
          go_version: ${{ inputs.go_version }}
          github_token: ${{ github.token }}
          golangci_lint_version: ${{ inputs.golangci_lint_version }}
          manage_token: ${{ secrets.manage_token }}

  GoSec:
    name: Run GoSec Security Scanner
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ inputs.go_version }}
          cache: false

      - name: Configure Go environment and netrc for private modules
        shell: bash
        run: |
          echo "GOPRIVATE=github.com/LerianStudio/*" >> $GITHUB_ENV
          echo "GONOSUMDB=github.com/LerianStudio/*" >> $GITHUB_ENV
          echo "GOPROXY=direct" >> $GITHUB_ENV

          echo -e "machine github.com\nlogin oauth2\npassword ${{ secrets.manage_token }}" > ~/.netrc
          chmod 600 ~/.netrc

      - name: Download Go Modules
        shell: bash
        run: go mod download

      - name: Run Gosec Scanner
        uses: securego/gosec@master
        with:
          args: ./...

  unit-tests:
    name: Run Unit Tests
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: ${{ inputs.go_version }}
          cache: false

      - name: Unit Tests
        shell: bash
        run: make test

  integration-tests:
    name: Run Integration Tests
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Setup .env files
        run: make set-env
        continue-on-error: true
      
      - name: Create External Network if not exists
        run: |
          docker network ls | grep app-network || docker network create app-network
        continue-on-error: true

      - name: Start Docker Compose Services
        run: make up
        continue-on-error: true

      - name: Wait for services to be ready
        run: sleep 10
        timeout-minutes: 2

      - name: Run Integration Tests
        run: make integration-test
        continue-on-error: true
